pipeline {
    agent {
        kubernetes {
            label 'kaniko-agent'
            defaultContainer 'jnlp'  // Only jnlp is running; we use kaniko explicitly
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: kaniko-agent
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
    command:
    - /busybox/cat
    tty: true
    volumeMounts:
    - name: docker-config
      mountPath: /kaniko/.docker
  restartPolicy: Never
  volumes:
  - name: docker-config
    secret:
      secretName: dockerhub-secret
      items:
        - key: .dockerconfigjson
          path: config.json
"""
        }
    }

    environment {
        IMAGE_NAME = 'singhsajal/ecommerce-frontend'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'staging', url: 'https://github.com/Devops8989/Devops_ecom_frontend.git', credentialsId: 'githubtoken'
            }
        }

        stage('Build & Push Docker Image using Kaniko') {
            steps {
                container('kaniko') {
                    sh '''
                    /kaniko/executor \
                      --context `pwd` \
                      --dockerfile `pwd`/Dockerfile \
                      --destination=docker.io/${IMAGE_NAME}:${BUILD_NUMBER} \
                      --destination=docker.io/${IMAGE_NAME}:latest \
                      --verbosity=info
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '✅ Image built and pushed to Docker Hub successfully!'
        }
        failure {
            echo '❌ Pipeline failed. Please check logs.'
        }
    }
}
